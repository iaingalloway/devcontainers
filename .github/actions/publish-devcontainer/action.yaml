name: Publish devcontainer
description: Build and publish a devcontainer
inputs:
  image:
    description: Name of the image to build
    required: true
  registry:
    description: 'Docker registry'
    required: false
    default: ghcr.io
  component-name:
    description: Name of the component
    required: false
  github-token:
    description: GitHub token
    required: true
  enable-component-version:
    description: Enable component version
    required: false
    default: 'true'

runs:
  using: composite
  steps:
    - name: Checkout (GitHub)
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install gitversion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: 5.12.0

    - name: Determine version number
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.10.2

    # - name: Determine component name
    #   id: component-name
    #   run: |
    #     NAME="${{ inputs.component-name }}"
    #       if [ -z "$NAME" ]; then
    #         NAME="${{ inputs.image }}"
    #       fi
    #       echo "name=${NAME}" >> $GITHUB_OUTPUT
    #   shell: bash

    # - name: Extract component version from devcontainer.json
    #   id: component-version
    #   run: |
    #     VERSION=$(jq -r '.features | to_entries[0].value.version' ./src/devcontainers/${{ inputs.image }}/.devcontainer/devcontainer.json)
    #     echo "version=${VERSION}" >> $GITHUB_OUTPUT
    #   shell: bash

    - name: Determine image tags using Docker metadata action
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=${{ steps.gitversion.outputs.semVer }},enable={{is_default_branch}}
          type=raw,value=${{ steps.gitversion.outputs.major }}.${{ steps.gitversion.outputs.minor }},enable={{is_default_branch}}
          type=raw,value=${{ steps.gitversion.outputs.major }},enable=${{ steps.gitversion.outputs.major != '0' }},enable={{is_default_branch}}
          type=raw,value=${{ steps.gitversion.outputs.semVer }}.${{ steps.gitversion.outputs.branchName }}-${{ steps.gitversion.outputs.commitsSinceVersionSource }}-{{sha}}
          type=raw,value=${{ steps.gitversion.outputs.semVer }}.${{ steps.gitversion.outputs.branchName }}-${{ steps.gitversion.outputs.commitsSinceVersionSource }}-${{ steps.gitversion.outputs.sha }}
          type=raw,value=${{ steps.gitversion.outputs.major }}.${{ steps.gitversion.outputs.minor }}-${{ steps.component-name.outputs.name }}${{ steps.component-version.outputs.version }},enable={{ is_default_branch }}
          type=raw,value=${{ steps.gitversion.outputs.major }},enable=${{ steps.gitversion.outputs.major != '0' }}-${{ steps.component-name.outputs.name }}${{ steps.component-version.outputs.version }},enable={{ is_default_branch }}
          type=raw,value=${{ steps.gitversion.outputs.semVer }}.${{ steps.gitversion.outputs.branchName }}-${{ steps.gitversion.outputs.commitsSinceVersionSource }}-{{sha}}-${{ steps.component-name.outputs.name }}${{ steps.component-version.outputs.version }}
          type=raw,value=${{ steps.gitversion.outputs.semVer }}.${{ steps.gitversion.outputs.branchName }}-${{ steps.gitversion.outputs.commitsSinceVersionSource }}-${{ steps.gitversion.outputs.sha }}-${{ steps.component-name.outputs.name }}${{ steps.component-version.outputs.version }}

    - name: Authenticate with registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: Echo tags
      run: |
        echo "${{ fromJson(steps.meta.outputs.json).tags }}"
      shell: bash

    # - name: Build devcontainer
    #   uses: devcontainers/ci@v0.3
    #   with:
    #     imageName: ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image }}
    #     imageTag: ${{ fromJson(steps.meta.outputs.json) }}
    #     subFolder: ./src/devcontainers/${{ inputs.image }}
    #     cacheFrom: ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image }}
